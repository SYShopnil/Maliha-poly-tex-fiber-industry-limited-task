{
  "openapi": "3.0.0",
  "info": {
    "title": "Application APIS Documentation",
    "version": "1.0.1",
    "description": "An API for authentication based activities"
  },
  "paths": {
    "/auth/login": {
      "post": {
        "tags": ["User Login"],
        "summary": "Login user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DLogin"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "User successfully logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 200 },
                    "token": { "type": "string" }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Unauthorized",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 401 },
                    "message": { "type": "string" },
                    "token": { "type": "object", "example": null }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "status": { "type": "integer", "example": 501 },
                    "message": { "type": "string" },
                    "token": { "type": "object", "example": null }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/auth/session": {
      "get": {
        "tags": ["Get Logged In User"],
        "isAuth": true,
        "summary": "Get logged-in user session",
        "responses": {
          "202": {
            "description": "Logged-in user session found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 202 },
                    "user": { "$ref": "#/components/schemas/User" },
                    "isAuth": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "404": {
            "description": "User not found or not logged in",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 404 },
                    "user": { "type": "null" },
                    "isAuth": { "type": "boolean" }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 500 },
                    "user": { "type": "object", "example": null },
                    "isAuth": { "type": "boolean" }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/auth/logout": {
      "get": {
        "tags": ["User LoggedOut"],
        "summary": "This API will logout the existing login user",
        "responses": {
          "202": {
            "description": "Logout successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 202 }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Some Internal Error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 501 }
                  }
                }
              }
            }
          }
        },
        "security": [
          {
            "cookieAuth": []
          }
        ]
      }
    },
    "/user/get/all": {
      "get": {
        "tags": ["Get ALl Users"],
        "summary": "Fetcher can get all user",
        "description": "This API will give all user info",
        "isAuth": false,
        "responses": {
          "200": {
            "description": "App is up and"
          }
        }
      }
    },
    "/user/create": {
      "post": {
        "tags": ["User Registration"],
        "summary": "Register a new user",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DCreateUser"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "user": { "$ref": "#/components/schemas/User" },
                    "status": { "type": "integer", "example": 201 }
                  }
                }
              }
            }
          },
          "422": {
            "description": "Validation error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "array",
                      "items": { "type": "string" }
                    },
                    "status": { "type": "integer", "example": 422 }
                  }
                }
              }
            }
          },
          "500": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 500 }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/text/add": {
      "post": {
        "tags": ["Add new text list"],
        "summary": "This api will add new text with element",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DCreateTextList"
              }
            }
          }
        },
        "responses": {
          "201": {
            "description": "User successfully created",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "payload": {
                      "$ref": "#/components/schemas/DCreateTextList"
                    },
                    "status": { "type": "integer", "example": 201 }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Text successfully but element failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "payload": { "type": "object", "example": null },
                    "status": { "type": "integer", "example": 401 }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 501 },
                    "payload": { "type": "object", "example": null }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/text/get/all": {
      "get": {
        "summary": "Get Texts Payload",
        "description": "Get the payload data of Text",
        "responses": {
          "200": {
            "description": "Successfully Get",
            "content": {
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/Payload"
                }
              }
            }
          },
          "501": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 501 },
                    "payload": { "type": "object", "example": null }
                  }
                }
              }
            }
          },
          "404": {
            "description": "Text Not Found",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 404 },
                    "payload": { "type": "object", "example": null }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/text/element/update": {
      "post": {
        "tags": ["Update Element"],
        "summary": "This api will update text elements by using element id",
        "requestBody": {
          "required": true,
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/DCreateTextList"
              }
            }
          }
        },

        "responses": {
          "200": {
            "description": "Text element update successfully",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 200 }
                  }
                }
              }
            }
          },
          "401": {
            "description": "Text element update failed",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": {
                      "type": "string"
                    },
                    "status": { "type": "integer", "example": 401 }
                  }
                }
              }
            }
          },
          "501": {
            "description": "Internal server error",
            "content": {
              "application/json": {
                "schema": {
                  "type": "object",
                  "properties": {
                    "message": { "type": "string" },
                    "status": { "type": "integer", "example": 501 }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "User": {
        "type": "object",
        "properties": {
          "user_id": { "type": "string" },
          "first_name": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "role": { "type": "string" },
          "profile_pic": { "type": "string" },
          "last_name": { "type": "string" },
          "create_at": { "type": "string" },
          "update_at": { "type": "string" },
          "is_active": { "type": "boolean" }
        }
      },
      "DLogin": {
        "type": "object",
        "properties": {
          "email": {
            "type": "string",
            "format": "email"
          },
          "password": {
            "type": "string"
          }
        },
        "required": ["email", "password"]
      },

      "DCreateUser": {
        "type": "object",
        "properties": {
          "first_name": { "type": "string" },
          "last_name": { "type": "string" },
          "role": { "type": "string" },
          "email": { "type": "string", "format": "email" },
          "password": { "type": "string" },
          "confirm_password": { "type": "string" },
          "profile_pic": { "type": "string" }
        },
        "required": [
          "first_name",
          "last_name",
          "role",
          "email",
          "password",
          "confirm_password"
        ]
      },
      "DTextDataElements": {
        "type": "object",
        "properties": {
          "isChecked": {
            "type": "boolean",
            "description": "Is Checked should be boolean"
          },
          "value": {
            "type": "integer",
            "description": "Element Value should be integer"
          },
          "elementId": {
            "type": "string",
            "description": "element Id should be string"
          }
        },
        "required": ["isChecked", "value", "elementId"]
      },
      "DCreateTextList": {
        "type": "object",
        "properties": {
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/DTextDataElements"
            }
          }
        }
      },
      "Payload": {
        "type": "object",
        "properties": {
          "message": {
            "type": "string",
            "description": "Success message"
          },
          "payload": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TextPayload"
            }
          },
          "status": {
            "type": "integer",
            "description": "HTTP status code"
          }
        }
      },
      "TextPayload": {
        "type": "object",
        "properties": {
          "textId": {
            "type": "string",
            "description": "ID of the text"
          },
          "total": {
            "type": "integer",
            "description": "Total value"
          },
          "elements": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Element"
            }
          }
        }
      },
      "Element": {
        "type": "object",
        "properties": {
          "elementId": {
            "type": "string",
            "description": "ID of the element"
          },
          "isChecked": {
            "type": "boolean",
            "description": "Whether the element is checked"
          },
          "value": {
            "type": "integer",
            "description": "Value of the element"
          }
        }
      }
    },
    "securitySchemes": {
      "cookieAuth": {
        "type": "apiKey",
        "in": "cookie",
        "name": "auth"
      }
    }
  }
}
